{
    "repos": {
        "UR1": {
            "narrative": "I want to login to my bank account, so that I can be able to check my bank account balance. I should be able to login into bank account if username and password are correct.  I can not log into bank account if username and password are not correct.   I should  view bank balance if the user is login and have permission to view account balance. I should not view account balance if they are login and do not have permission to view account balance.",
            "gherkin": "Feature: Bank Account Login and Balance Checking\n\nBackground:\nGiven the user is on the bank account login page\n\n@successful-login\nScenario: User logs in with correct username and password\nWhen the user enters correct <username> and <password>\nAnd clicks on the login button\nThen the user is successfully logged in\n\n@test @dev\nExamples:\n| username | password   |\n| user123  | pass123    |\n| johnDoe  | securePwd  |\n\n@failed-login\nScenario: User unable to login with incorrect username and password\nWhen the user enters incorrect <username> or <password>\nAnd clicks on the login button\nThen the login attempt fails\n\n@test @dev\nExamples:\n| username | password     |\n| user321  | wrongPass    |\n| janeDoe  | invalidPwd   |\n\n@view-balance\nScenario: User views account balance after successful login\nGiven the user is logged in\nAnd has permission to view account balance\nWhen the user navigates to the balance page\nThen the user can view the account balance\n\n@no-view-balance\nScenario: User unable to view account balance without permission\nGiven the user is logged in\nAnd does not have permission to view account balance\nWhen the user tries to access the balance page\nThen the account balance is not visible\""
        },
        "UR2": {
            "narrative": "I want to be able to create an account, so that I can create my own profile. I should be able to create an account if I do not have an exist account. I should be able to create a profile if I have an account I should not be able to create a profile if I do not have an account. I should not be able to create a profile if I do not remember my account username and password.",
            "gherkin": "Feature: Account Creation and Profile Setup\n\nBackground:\nGiven the user does not have an existing account\n\n@account-creation\nScenario Outline:  User can create an account\nWhen the user creates an account with username \\\"<username>\\\" and password \\\"<password>\\\"\nThen the account is successfully created\n\n@test @dev\nExamples:\n| username | password  |\n| user1    | pass123   |\n| user2    | testpass  |\n\n@profile-setup\nScenario Outline:   User can create a profile with existing account\nGiven the user has an existing account with username \\\"<username>\\\" and password \\\"<password>\\\"\nWhen the user creates a profile\nThen the profile is successfully set up\n\n@test @dev\nExamples:\n| username | password  |\n| user1    | pass123   |\n| user2    | testpass  |\n\n@no-account\nScenario:   User cannot create a profile without an existing account\nGiven the user does not have an existing account\nWhen the user tries to create a profile\nThen the profile setup is not completed successfully\n\n@no-credentials\nScenario Outline:   User cannot create a profile without remembering account credentials\nGiven the user has an existing account with username \\\"<username>\\\" and password \\\"<password>\\\"\nWhen the user tries to create a profile without entering correct credentials\nThen the profile setup is not completed successfully\n\n@test @dev\nExamples:\n| username | password  |\n| user1    | pass123   |\n| user2    | testpass  |\""
        },
        "UR3": {
            "narrative": "I want to buy the right size cloths for a boy and a girl, so that I can be able to fix the boy and girl with the right size cloths. I should be able to buy boy cloths between size 20 to 30. I should be able to buy girl cloths between 20 to 25. I should be able to buy boy and girl cloths if right size exist else do not buy. I should be able to buy girl cloths for boy if boy cloths size fit girl. I should be able to buy boy cloths for girl if girl cloth size fit boy. I should be able to buy no cloth if it does not fit boy or girl.",
            "gherkin": "Feature: Buying Clothes for Boys and Girls\n\nBackground:\nGiven the available cloth sizes for boys are between 20 to 30\nAnd the available cloth sizes for girls are between 20 to 25\n\n@buy-boy-clothes\nScenario Outline: Buying clothes for a boy with the right size\nGiven the user is buying clothes for a boy\nWhen the user selects the size <size> for the boy\nThen the purchase is successful for the boy\n\n@test @dev\nExamples:\n| size |\n| 25   |\n| 30   |\n\n@buy-girl-clothes\nScenario Outline: Buying clothes for a girl with the right size\nGiven the user is buying clothes for a girl\nWhen the user selects the size <size> for the girl\nThen the purchase is successful for the girl\n\n@test @dev\nExamples:\n| size |\n| 20   |\n| 25   |\n\n@buy-both-clothes\nScenario Outline:  Buying clothes for both boy and girl if right sizes exist\nGiven the user is buying clothes for both a boy and a girl\nWhen the user selects the size <boy_size> for the boy and <girl_size> for the girl\nThen the purchase is successful for both\n\n@test @dev\nExamples:\n| boy_size | girl_size |\n| 25       | 20        |\n\n| boy_size | girl_size |\n| 30       | 25        |\n\n@fit-girl-in-boy-clothes\nScenario:  Buying girl clothes for a boy if girl cloth size fits boy\nGiven the user is buying clothes for a boy\nAnd the boy's size is smaller than the largest girl size \nWhen the user selects the size <girl_size> for the boy \nThen the purchase is successful for the boy with girl clothes\n\n@fit-boy-in-girl-clothes\nScenario:  Buying boy clothes for a girl if boy cloth size fits girl\nGiven the user is buying clothes for a girl\nAnd the girl's size is smaller than the largest boy size \nWhen the user selects the size <boy_size> for the girl \nThen the purchase is successful for the girl with boy clothes\n\n@not-fit-any-clothes\nScenario:  Not able to buy any clothes if it does not fit boy or girl\nGiven the user is trying to buy clothes\nAnd the selected sizes do not fit either a boy or a girl \nThen the purchase is unsuccessful and no clothes are bought\""
        },
        "UR4": {
            "narrative": "I want to view user documentation for the website, so that I know how to use the web app. I should be able to know how to use the web app if there is a user documentation on the website. I should be able to know how to use the web app if the user documentation is easy to understand. I should not be able to know how to use the web app if there is no user documentation. I should not be able to know how to use the web app if the user documentation page is down",
            "gherkin": "Feature: User Documentation for Website\n\nBackground:\nGiven the website has user documentation\n\n@understand\nScenario: User able to understand how to use the web app with clear user documentation\nGiven the user accesses the user documentation page \nThen the user should find the instructions easy to follow\n\n@no-doc\nScenario:  User unable to know how to use the web app without user documentation\nGiven the user cannot find the user documentation page\nThen the user is unable to understand how to use the web app\n\n@down\nScenario: User unable to know how to use the web app if user documentation page is down\nGiven the user tries to access the user documentation page and it is unavailable\nThen the user is unable to access the instructions for the web app"
        },
        "UR5": {
            "narrative": "I want to be able to view a map display of the special waste drop off sites around my area, so that I know where to drop of my special waste. I should be able to see special waste site on map if there is any special waste drop off available. I should be able to see special waste site on map if the GPS works correctly. I should not be able to see special waste site on map if there is not any special waste drop off available. I should not be able to see special waste site on map if the internet connection is down.",
            "gherkin": "Feature: Special Waste Drop Off Site Map Display\n\nBackground:\nGiven the GPS is enabled\nAnd the internet connection is stable\n\n@positive\nScenario: View special waste drop off sites on the map if available\nGiven there are special waste drop off sites in the area\nWhen I view the map display\nThen I should see the special waste sites marked on the map\n\n@positive\\n  Scenario:  View special waste drop off sites on the map with correct GPS\nGiven the GPS is functioning correctly\nAnd there are special waste drop off sites in the area\nWhen I view the map display\nThen I should see the special waste sites marked on the map\n\n@negative\nScenario:  Unable to view special waste drop off sites on the map if not available\nGiven there are no special waste drop off sites in the area\nWhen I view the map display\nThen I should not see any special waste sites marked on the map\n\n@negative\nScenario:  Unable to view special waste drop off sites on the map with no internet connection\nGiven the internet connection is down\nAnd there are special waste drop off sites in the area\nWhen I view the map display\nThen I should not see any special waste sites marked on the map\""
        },
        "UR6": {
            "narrative": "I want to view all available activity fees online, so that I can easily create a bill statement. I should be able to view some activities fees online if I plan to create a bill statement. I should be able to view all activities fees online if I plan to create a bill statement. I should be able to view all activities fees online if I plan not to create a bill statement. I should not be able to view all activities fees online if the network is down. I should not be able to view all activities fees online if there are no activities fees online",
            "gherkin": "Feature: Viewing Activity Fees Online\n\nBackground:\nGiven I plan to create a bill statement\n\n@view_activities_fees\nScenario: View some activities fees online\nGiven there are some activities fees available online\nWhen I view the activities fees online\nThen I can see some of the activities fees\n\n@view_all_activities_fees\nScenario:  View all activities fees online for bill statement creation\nGiven there are all activities fees available online\nWhen I view all the activities fees online\nThen I can see all the activities fees\n\n@view_activities_fees_no_bill\nScenario:  View all activities fees online without bill statement creation\nGiven I do not plan to create a bill statement\nWhen I view all the activities fees online\nThen I can see all the activities fees\n\n@network_issue\nScenario: Unable to view all activities fees online due to network issue\nGiven there are activities fees available online\nWhen the network is down\nThen I cannot view all the activities fees\n\n@no_activities_fees\nScenario:  Unable to view all activities fees online if no activities fees available\nGiven there are no activities fees available online\nWhen I try to view the activities fees\nThen I cannot view any activities fees\""
        },
        "UR7": {
            "narrative": "I want to be able to receive tempting rewards, so that I have a reason to use the website. write at least three test scenarios with cases. I should be able to receive tempting rewards if I want to use the website.  I should not be able to receive tempting rewards if I do not want to use the website.  I should not be able to receive tempting rewards if I want to use the website and do not want any reward.",
            "gherkin": "Feature: Tempting Rewards for Website Usage\n\nBackground:\nGiven a user is using the website\n\n@receive-rewards\nScenario Outline: User receives tempting rewards if willing to use the website\nGiven the user wants to use the website\nAnd the user desires tempting rewards\nWhen the rewards are granted\nThen the user receives tempting rewards\n\n@test @dev\nExamples:\n| desire_rewards |\n| true           |\n\n@no-rewards\nScenario Outline: User does not receive tempting rewards if not willing to use the website\nGiven the user does not want to use the website\nWhen the rewards are checked\nThen the user does not receive tempting rewards\n\n@test @dev\nExamples:\n| desire_rewards |\n| false          |\n\n@no-rewards-on-desire\nScenario Outline: User does not receive tempting rewards if wanting to use the website without desiring rewards\nGiven the user wants to use the website\nAnd the user does not desire any rewards\nWhen the rewards are granted\nThen the user does not receive tempting rewards\n\n@test @dev\nExamples:\n| desire_rewards |\n| false          |\""
        },
        "UR8": {
            "narrative": "I want to access an API from the website, so that I can integrate it and implement certain features in my own iOS application. I should be able to access an API if the access is free. I should be able to access an API if I have the API access key. I should not be able to access an API if the access key has expired. I should not be able to access an API if the access key is wrong. I should be able to access an API if the access key has the correct permissions.",
            "gherkin": "Feature: API Access for iOS Application Integration\n\nBackground:\nGiven the API access is free\n\n@free-access\nScenario Outline: User can access the API for free\nGiven the access is free\nWhen the user accesses the API\nThen the access is successful\n\n@test @dev\nExamples:\n| description |\n| free access |\n\n@valid-access-key\nScenario Outline: User can access the API with a valid access key\nGiven the user has a valid access key\nWhen the user accesses the API\nThen the access is successful\n@test @dev\nExamples:\n| description     |\n| valid access key |\n@expired-access-key\nScenario Outline:  User cannot access the API with an expired access key\nGiven the user has an expired access key\nWhen the user tries to access the API\nThen the access is denied\n@test @dev\nExamples:\n| description      |\n| expired access key |\n@wrong-access-key\nScenario Outline:  User cannot access the API with a wrong access key\nGiven the user has a wrong access key\nWhen the user tries to access the API\nThen the access is denied\n@test @dev \nExamples: \n| description    |\n| wrong access key | \n\n@correct-permissions\nScenario Outline:  User can access the API with correct permissions\nGiven the user has the correct permissions in the access key\nWhen the user accesses the API\nThen the access is successful\n\n@test @dev\nExamples:\n| description           |\n| correct permissions |"
        },
        "UR9": {
            "narrative": "I want to have full access to data related to my company, so that I can have a sense of my company's performance.  I should be able to have full access to company data if I have full access privilege to the data.  I should be able to have full access to company data if company data has no restrictions to access. I should not be able to have full access to company data if I do not have full access privilege to the data. I should be able to have full access to company data if company data has some restrictions to access. I should not be able to have full access to company data if I do not have the correct access privilege to the data",
            "gherkin": "Feature: Company Data Access\n\nBackground:\nGiven the user has full access privilege to company data\n\n@fullAccess\nScenario: User with full access privilege can access all company data\nGiven the user has full access privilege to company data\nWhen the user accesses company data\nThen the user can view all company data\n\n@noRestrictions\nScenario:  User can access company data with no restrictions\nGiven the company data has no restrictions to access \nWhen the user accesses company data\nThen the user can view all company data \n\n@limitedAccess\nScenario:  User with limited access privilege cannot access all company data\nGiven the user does not have full access privilege to company data\nWhen the user tries to access company data\nThen the user cannot view all company data\n\n@restrictedAccess\nScenario:  User can access company data with some restrictions\nGiven the company data has some restrictions to access\nWhen the user accesses company data\nThen the user can view some restricted company data\n\n@incorrectAccess\nScenario: User with incorrect access privilege cannot access all company data\nGiven the user does not have the correct access privilege to the data\nWhen the user tries to access company data\nThen the user cannot view all company data"
        },
        "UR10": {
            "narrative": "I want to be able to block specific users based on IP address, so that I can prevent spamming on the websites. I should be able to block specific users based on IP address if user IP address is on the blocking list. I should not be able to block specific users based on IP address if user IP address is not on the blocking list.",
            "gherkin": "Feature: Block Users by IP Address\n\nBackground:\nGiven a list of blocked IP addresses\n\n@blockIP\nScenario Outline: Block specific user based on IP address in the blocking list\nGiven user IP address is <ip_address>\nAnd the IP address is on the blocking list\nWhen the user is blocked\nThen the user is prevented from accessing the website \n\n@test @dev\nExamples:\n| ip_address     |\n| 192.168.1.1    |\n| 10.0.0.1       |\n\n@dontBlockIP\nScenario Outline: Do not block specific user based on IP address not in the blocking list\nGiven user IP address is <ip_address>\nAnd the IP address is not on the blocking list\nWhen the user is not blocked\nThen the user can access the website\n\n@test @dev\nExamples: \n| ip_address       |\n| 172.16.0.1       | \n| 200.100.50.25    |"
        },
        "UR11": {
            "narrative": "I want to be able to check transaction history and keep a record of it, so that I can go back when needed. I should be able to check transaction history and keep a record of transaction history if I have the permission to check transaction history and keep record. I should not be able to check transaction history and keep a record of transaction history if I do not have the permission to check transaction history and keep record. I should be able to check only transaction history and not keep a record of transaction history if I have the permission to check transaction history and not keep record. I should be able to check transaction history and keep a record of it if I want to keep record. I should be able to keep a record of transaction history if I have only permission to check transaction history",
            "gherkin": "Feature: Transaction History Management\n\nBackground:\nGiven the user has permission to check transaction history and keep record\n\n@check-record\nScenario: User checks transaction history and keeps a record\nGiven the user wants to check transaction history and keep a record\nWhen the user checks the transaction history\nThen the user successfully keeps a record of the transaction history\n\n@no-permission\nScenario:  User without permission cannot check transaction history or keep a record\nGiven the user does not have permission to check transaction history and keep record\nWhen the user tries to check transaction history or keep a record\nThen the action is not allowed\n\n@check-only\nScenario:  User checks transaction history only without keeping a record\nGiven the user has permission to check transaction history but not keep record\nWhen the user checks the transaction history\nThen the user can view the transaction history without keeping a record"
        },
        "UR12": {
            "narrative": "I want to sending and withdrawing money by adults and non-adults, so that I can be able to make transactions for my business. I should be an adult. I should be able to withdraw money if adult. I should be able to send money if adult. I should not be able to send more than 20 euros of money if not adult. I should be able to send any amount of money if I am only an adult.",
            "gherkin": "Feature: Money Transactions for Adult and Non-Adult Users\n\nBackground:\nGiven the user is an adult\n\n@withdraw\nScenario: Adult user successfully withdraws money\nWhen the adult user withdraws 50 euros\nThen the withdrawal is successful \n\n@send\nScenario: Adult user successfully sends money\nWhen the adult user sends 30 euros\nThen the money transfer is successful\n\n@send-limit\nScenario: Non-adult user attempting to send over 20 euros is prevented\nGiven the user is not an adult\nWhen the non-adult user tries to send 25 euros\nThen the transaction is blocked"
        }
    }
}